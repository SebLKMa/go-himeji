package compiler

import (
	"github.com/seblkma/go-himeji/ast"
	"github.com/seblkma/go-himeji/object"
	"github.com/seblkma/go-himeji/opcodes"
)

// ByteCode are sent to VM, asserted by compiler tests
type ByteCode struct {
	Instructions opcodes.Instructions // generated by Compiler
	Constants    []object.Object      // evaluated by Compiler
}

type Compiler struct {
	instructions opcodes.Instructions
	constants    []object.Object
}

func New() *Compiler {
	return &Compiler{
		instructions: opcodes.Instructions{},
		constants:    []object.Object{},
	}
}

func (c *Compiler) Compile(node ast.Node) error {
	return nil
}

func (c *Compiler) ByteCode() *ByteCode {
	return &ByteCode{
		Instructions: c.instructions,
		Constants:    c.constants,
	}
}
